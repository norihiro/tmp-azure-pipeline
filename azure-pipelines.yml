variables:
  isReleaseMode: ${{Â startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}

trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*'

- job: 'Build_macOS'
  pool:
    vmImage: 'macos-10.14'
  steps:
    - checkout: self
      submodules: true

    - script: ./CI/install-dependencies-macos.sh
      displayName: 'Install dependencies'

    - script: ./CI/install-build-obs-macos.sh
      displayName: 'Build OBS'

    - script: ./CI/build-macos.sh
      displayName: 'Build obs-ndi'

    - task: InstallAppleCertificate@1
      displayName: 'Install release signing certificates'
      condition: eq(variables['isReleaseMode'], true)
      inputs:
        certSecureFile: 'Certificates.p12'
        certPwd: $(secrets.macOS.certificatesImportPassword)

    - script: ./CI/package-macos.sh
      displayName: 'Package obs-ndi'
      env:
        RELEASE_MODE: $(isReleaseMode)
        CODE_SIGNING_IDENTITY: $(secrets.macOS.codeSigningIdentity)
        INSTALLER_SIGNING_IDENTITY: $(secrets.macOS.installerSigningIdentity)
        AC_USERNAME: $(secrets.macOS.notarization.username)
        AC_PASSWORD: $(secrets.macOS.notarization.password)
        AC_PROVIDER_SHORTNAME: $(secrets.macOS.notarization.providerShortName)

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: './release'
        artifactName: 'macos_build'
